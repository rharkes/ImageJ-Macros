classdef spect
    % Handle for the spect-file
    % getdata
    % setdata
    %
    
    properties
        filename
        data
    end
    
    methods
        function obj = spect(filename)
            if nargin<1,[f,p]=uigetfile('.txt');filename=[p,f];end
            if isempty(regexp(filename,'\w:\', 'once')),filename=[cd,filesep,filename];end
            if exist(filename,'file')==2
                fid=fopen(filename,'r');
                l = fgetl(fid);
                while l
                fclose(fid);
            end
        end
        function [data] = plotspectrum(obj,range)
            switch nargin
                case 1 %load all spectra
                    types={obj.header.spectra.type};
                    data=cell([1,numel(types)]);
                    for ct = 1:numel(types)
                        data{ct}=obj.getdata(types{ct}); %for recursion only set new data
                    end
                case 2 %load individual spectrum
                    fid=fopen(obj.filename);
                    dat=strcmp({obj.header.spectra.type},dattype); %find requested type
                    if sum(dat)~=1
                        dat=strcmp({obj.header.spectra.name},dattype); %find requested name
                    end
                    if sum(dat)~=1,error('could not find spectrum');end
                    fseek(fid,obj.header.spectra(dat).datastart+obj.hs,-1); %go to position
                    data = fread(fid,obj.header.spectra(dat).datasize/8,'*double','l'); %read data
                    fclose(fid);
                    %reshape, scale, interpolate
                    data = reshape(data,[],2);
                    switch obj.scale
                        case 1 %fluorescence, absorption and led
                            data(:,2)=data(:,2)/max(data(:,2));
                        case 2 %filters. transmission can be in % or not
                            if max(data(:,2))>1,data(:,2)=data(:,2)/100;end
                        otherwise
                    end
                    if ~isempty(obj.xax)
                        data=interp1(data(:,1),data(:,2),obj.xax);
                        data(isnan(data))=0;
                    end
            end
        end
        
    end
end